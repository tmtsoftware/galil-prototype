include "logging.conf"

akka {
  loglevel = error
  actor{
    provider = remote
  }
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.port = 0
    }
  }
}

startManagement = false


csw-logging {

  component-log-levels {
    config-service-client = error
    location-service-lib = info
    GalilHcd = info
  }

  // Log level for logger API
  logLevel = trace
  // Log level for slf4j messages
  slf4jLogLevel = trace
  // Log level for Akka messages, should be >= akka.loglevel
  akkaLogLevel = trace

  appenders = ["csw.logging.client.appenders.FileAppender$", "csw.logging.client.appenders.StdOutAppender$"]

  appender-config {
    file {
      # Include standard headers
      fullHeaders = true
      # Sort the fields in Json objects
      sorted = true
      # Base path directory to hold log files from tmt apps. The value is picked from env var `TMT_LOG_HOME`. It is necessary
      # to have `TMT_LOG_HOME` set as env var otherwise an exception will be thrown when FileAppender gets initialized.
      baseLogPath = ${?TMT_LOG_HOME}
      # Directory to hold log files under base path $TMT_LOG_HOME i.e. basePath/logPath
      logPath = ""
      # Common log messages below this level are removed, none removed when set to trace
      logLevelLimit = trace
      # Flag to turn file rotation ON or OFF. Currently log file is rotated daily at 12:00 pm UTC time. By turning this flag off
      # file rotation will not happen.
      rotate = true
    }
    stdout {
      # Include standard headers
      fullHeaders = false
      # Use colors for log levels
      color = true
      # The maximum number of character that should be on a line
      # This is only a goal; in practice some may contain more characters.
      width = 80
      # Print summary counts when logger is closed
      summary = true
      # pretty output - multiple line json
      pretty = false
      # Messages below this level are removed, none removed when set to trace
      logLevelLimit = trace
      # false Json output; true simple one line text output
      oneLine = true
    }
  }
}

// Optional Galil configuration (defaults to 127.0.0.1:8888)
//galil {
//  host = "127.0.0.1"
//  port = 8888
//}
